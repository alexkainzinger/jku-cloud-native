name: Build & Deploy

on:
  push:
    branches: 
      - main
      - staging

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      release_date: ${{ steps.set_date.outputs.date }}
      environment: ${{ steps.check_environment.outputs.environment }}
    steps:
      - id: set_date
        run: echo "date=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
      - id: check_environment
        run: echo "environment=$([[ $GITHUB_REF_NAME == "main" ]] && echo "production" || echo $GITHUB_REF_NAME)" >> $GITHUB_OUTPUT

  build-frontend:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: ðŸšš Checkout
        uses: actions/checkout@v3

      - name: ðŸ”’ Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ’¾ Set image name
        run: echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/jku-cloud-native-frontend:${{needs.prepare.outputs.environment}}-${{needs.prepare.outputs.release_date}}" >> $GITHUB_ENV

      - name: ðŸ”¨ Build Frontend
        run: |
          docker build ./applications/frontend --file applications/frontend/Dockerfile --tag ${{ env.IMAGE_NAME }} && \
          docker push ${{ env.IMAGE_NAME }}

      - name: ðŸšš Set Frontend Deployment
        uses: mikefarah/yq@master
        with: 
          cmd: image=${{env.IMAGE_NAME}} yq -i '.spec.template.spec.containers[0].image = strenv(image)' gitops/${{needs.prepare.outputs.environment}}/frontend/deployment.yml

      - name: ðŸš€ Upload deployment.yml
        uses: actions/upload-artifact@v3
        with:
          name: build-frontend-deployment-yml
          path: gitops/${{needs.prepare.outputs.environment}}/frontend/deployment.yml

  build-node-app:
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: ðŸšš Checkout
        uses: actions/checkout@v3

      - name: ðŸ”’ Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ðŸ’¾ Set image name
        run: echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/jku-cloud-native-node-app:${{needs.prepare.outputs.environment}}-${{needs.prepare.outputs.release_date}}" >> $GITHUB_ENV

      - name: ðŸ”¨ Build Country Backend
        run: |
          docker build ./applications/country-backend --file applications/country-backend/Dockerfile --tag ${{ env.IMAGE_NAME }} && \
          docker push ${{ env.IMAGE_NAME }}

      - name: ðŸšš Set Frontend Deployment
        uses: mikefarah/yq@master
        with: 
          cmd: image=${{env.IMAGE_NAME}} yq -i '.spec.template.spec.containers[0].image = strenv(image)' gitops/${{needs.prepare.outputs.environment}}/node-app/deployment.yml

      - name: ðŸš€ Upload deployment.yml
        uses: actions/upload-artifact@v3
        with:
          name: build-node-app-deployment-yml
          path: gitops/${{needs.prepare.outputs.environment}}/node-app/deployment.yml

  update-resources:
    runs-on: ubuntu-latest
    needs: [prepare, build-frontend, build-node-app]

    steps:
      - name: ðŸšš Checkout
        uses: actions/checkout@v3

      - name: ðŸ’¾ Download build-frontend-deployment-yml
        uses: actions/download-artifact@v3
        with:
          name: build-frontend-deployment-yml
          path: gitops/${{needs.prepare.outputs.environment}}/frontend

      - name: ðŸ’¾ Download build-node-app-deployment-yml
        uses: actions/download-artifact@v3
        with:
          name: build-node-app-deployment-yml
          path: gitops/${{needs.prepare.outputs.environment}}/node-app

      - name: ðŸš€ Commit deployment Files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "ci(gitops): update resources"
          skip_checkout: true
